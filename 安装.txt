临时关闭swap
sudo swapoff -a
永久需要
sed -i '/ swap / s/^/#/' /etc/fstab

--------------------------------------------------------------------------------------------------
如果是国内安装，需要使用脚本先pull一些镜像

master节点初始化集群
kubeadm init \
    --apiserver-advertise-address=206.189.95.93 \
    --pod-network-cidr=10.244.0.0/16

本机：
sudo kubeadm init --pod-network-cidr=10.244.0.0/16

vps上直接
kubeadm init --apiserver-advertise-address=vps的公网ip --pod-network-cidr=10.244.0.0/16

返回子节点加入集群的命令，类似
kubeadm join 10.167.11.153:6443 --token ccln7w.4bk9qkr5no7u6y3o --discovery-token-ca-cert-hash sha256:b72bf7d4c665c8aa66ccb5e9e8a3db13503ee94836267a6074ba1547a9ac85d8
子节点加入集群

然后主节点上
mkdir -p $HOME/.kube; sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
sudo chown $(id -u):$(id -g) $HOME/.kube/config

查看节点状态
kubectl get nodes --all-namespaces

提示安装网络插件，这个在master上装完以后，等会各个node都能自动装好，这个插件的安装和子节点加入集群的顺序没有先后，都可以
./docker_tag_pull quay.io/coreos/flannel:v0.11.0-amd64 jmgao1983/flannel:v0.11.0-amd64
kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml

集群初始化如果遇到问题，可以使用命令进行清理然后重新执行初始化
kubeadm reset
--------------------------------------------------------------------------------------------------
子节点使用类似以下命令加入集群
kubeadm join 10.167.11.153:6443 --token ccln7w.4bk9qkr5no7u6y3o --discovery-token-ca-cert-hash sha256:b72bf7d4c665c8aa66ccb5e9e8a3db13503ee94836267a6074ba1547a9ac85d8
--------------------------------------------------------------------------------------------------
装完以后，最好master上检查一下
kubectl get pods -n kube-system -o wide

如果发现有Init:0/1或者是ContainerCreating，可能需要看下所在节点的镜像下载情况，可以分别在master和node上看
在master上docker images，把需要的image在node主机上一个个pull下来，我在pull过程中，总是提示错误，最后在节点主机上做了域名和ip的映射才成功（实际上，域名和ip映射添加成功以后，等一会就可以看到节点的pods都ok了）。
--------------------------------------------------------------------------------------------------
主节点移除子节点
kubectl drain k8s-node --delete-local-data --force --ignore-daemonsets
kubectl delete node k8s-node
子节点内执行
kubeadm reset

如果没有子节点，那么单节点设置master节点也可以运行Pod
kubectl taint nodes --all node-role.kubernetes.io/master-